<map id="Button" name="Button">
<area shape="rect" id="node2" href="$classUIElement.html" title="Base class for UI Elements Provides functions and variables for derived user interface elements..." alt="" coords="825,752,1028,1152"/>
<area shape="rect" id="node3" href="$structUIElement_1_1ElementData.html" title="{UIElement::ElementData\n|+ elementID\l+ text\l+ tooltipText\l+ actionID\l+ actionParameter\l+ textureID\l+ buildMenuID\l+ layoutGroupName\l+ isToggleButton\l|}" alt="" coords="806,1259,986,1453"/>
<area shape="rect" id="node4" href="$structSignal_1_1Signal.html" title="{Signal::Signal\&lt; void\l(UIElement *sender)\&gt;\n||+ Signal()\l}" alt="" coords="225,906,389,998"/>
<area shape="rect" id="node5" href="$classSignal_1_1Lib_1_1ProtoSignal.html" title="{Signal::Lib::ProtoSignal\l\&lt; void(UIElement *sender)\l, Lib::CollectorDefault\&lt;\l typename std::function\&lt; void\l(UIElement *sender) \&gt;::result_type \&gt; \&gt;\n||}" alt="" coords="5,379,283,515"/>
<area shape="rect" id="node6" href="$classSignal_1_1Lib_1_1ProtoSignal.html" title="ProtoSignal is the template implementation for callback list. " alt="" coords="395,5,586,97"/>
<area shape="rect" id="node8" href="$classSignal_1_1Lib_1_1ProtoSignal.html" title="{Signal::Lib::ProtoSignal\l\&lt; SignalSignature, Collector \&gt;\n||}" alt="" coords="466,248,683,340"/>
<area shape="rect" id="node10" href="$classSignal_1_1Lib_1_1ProtoSignal.html" title="{Signal::Lib::ProtoSignal\l\&lt; void(const std::string\l &amp;, UIElement *sender), Lib\l::CollectorDefault\&lt; typename\l std::function\&lt; void(const std\l::string &amp;, UIElement *sender)\l \&gt;::result_type \&gt; \&gt;\n||}" alt="" coords="290,364,505,529"/>
<area shape="rect" id="node12" href="$classSignal_1_1Lib_1_1ProtoSignal.html" title="{Signal::Lib::ProtoSignal\l\&lt; void(), Lib::CollectorDefault\l\&lt; typename std::function\&lt; void\l() \&gt;::result_type \&gt; \&gt;\n||}" alt="" coords="684,553,911,675"/>
<area shape="rect" id="node7" href="$structSignal_1_1Signal.html" title="Signal is a template type providing an interface for arbitrary callback lists. A signal type needs to..." alt="" coords="418,568,646,660"/>
<area shape="rect" id="node9" href="$structSignal_1_1Signal.html" title="{Signal::Signal\&lt; void\l(const std::string &amp;,\l UIElement *sender)\&gt;\n||+ Signal()\l}" alt="" coords="444,899,607,1005"/>
<area shape="rect" id="node11" href="$structSignal_1_1Signal.html" title="{Signal::Signal\&lt; void()\&gt;\n||+ Signal()\l}" alt="" coords="631,913,801,991"/>
</map>
